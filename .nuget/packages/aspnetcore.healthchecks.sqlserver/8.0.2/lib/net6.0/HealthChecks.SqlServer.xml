<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HealthChecks.SqlServer</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.DependencyInjection.SqlServerHealthCheckBuilderExtensions">
            <summary>
            Extension methods to configure <see cref="T:HealthChecks.SqlServer.SqlServerHealthCheck"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.SqlServerHealthCheckBuilderExtensions.AddSqlServer(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder,System.String,System.String,System.Action{Microsoft.Data.SqlClient.SqlConnection},System.String,System.Nullable{Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Add a health check for SQL Server databases.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder"/>.</param>
            <param name="connectionString">The Sql Server connection string to be used.</param>
            <param name="healthQuery">The query to be executed.</param>
            <param name="configure">An optional action to allow additional SQL Server specific configuration.</param>
            <param name="name">The health check name. Optional. If <c>null</c> the type name 'sqlserver' will be used for the name.</param>
            <param name="failureStatus">
            The <see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus"/> that should be reported when the health check fails. Optional. If <c>null</c> then
            the default status of <see cref="F:Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus.Unhealthy"/> will be reported.
            </param>
            <param name="tags">A list of tags that can be used to filter sets of health checks. Optional.</param>
            <param name="timeout">An optional <see cref="T:System.TimeSpan"/> representing the timeout of the check.</param>
            <returns>The specified <paramref name="builder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.SqlServerHealthCheckBuilderExtensions.AddSqlServer(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder,System.Func{System.IServiceProvider,System.String},System.String,System.Action{Microsoft.Data.SqlClient.SqlConnection},System.String,System.Nullable{Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Add a health check for SQL Server databases.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder"/>.</param>
            <param name="connectionStringFactory">A factory to build the SQL Server connection string to use.</param>
            <param name="healthQuery">The query to be executed.</param>
            <param name="configure">An optional action to allow additional SQL Server specific configuration.</param>
            <param name="name">The health check name. Optional. If <c>null</c> the type name 'sqlserver' will be used for the name.</param>
            <param name="failureStatus">
            The <see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus"/> that should be reported when the health check fails. Optional. If <c>null</c> then
            the default status of <see cref="F:Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus.Unhealthy"/> will be reported.
            </param>
            <param name="tags">A list of tags that can be used to filter sets of health checks. Optional.</param>
            <param name="timeout">An optional <see cref="T:System.TimeSpan"/> representing the timeout of the check.</param>
            <returns>The specified <paramref name="builder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.SqlServerHealthCheckBuilderExtensions.AddSqlServer(Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder,HealthChecks.SqlServer.SqlServerHealthCheckOptions,System.String,System.Nullable{Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Add a health check for SQL Server databases.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder"/>.</param>
            <param name="options">Options for health check.</param>
            <param name="name">The health check name. Optional. If <c>null</c> the type name 'sqlserver' will be used for the name.</param>
            <param name="failureStatus">
            The <see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus"/> that should be reported when the health check fails. Optional. If <c>null</c> then
            the default status of <see cref="F:Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus.Unhealthy"/> will be reported.
            </param>
            <param name="tags">A list of tags that can be used to filter sets of health checks. Optional.</param>
            <param name="timeout">An optional <see cref="T:System.TimeSpan"/> representing the timeout of the check.</param>
            <returns>The specified <paramref name="builder"/>.</returns>
        </member>
        <member name="T:HealthChecks.SqlServer.SqlServerHealthCheck">
            <summary>
            A health check for SqlServer services.
            </summary>
        </member>
        <member name="M:HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HealthChecks.SqlServer.SqlServerHealthCheckOptions">
            <summary>
            Options for <see cref="T:HealthChecks.SqlServer.SqlServerHealthCheck"/>.
            </summary>
        </member>
        <member name="P:HealthChecks.SqlServer.SqlServerHealthCheckOptions.ConnectionString">
            <summary>
            The Sql Server connection string to be used.
            </summary>
        </member>
        <member name="P:HealthChecks.SqlServer.SqlServerHealthCheckOptions.CommandText">
            <summary>
            The query to be executed.
            </summary>
        </member>
        <member name="P:HealthChecks.SqlServer.SqlServerHealthCheckOptions.Configure">
            <summary>
            An optional action executed before the connection is opened in the health check.
            </summary>
        </member>
        <member name="P:HealthChecks.SqlServer.SqlServerHealthCheckOptions.HealthCheckResultBuilder">
            <summary>
            An optional delegate to build health check result.
            </summary>
        </member>
        <member name="T:ApiMarker">
            <summary>
            Used for test purposes only.
            </summary>
        </member>
        <member name="M:Guard.ThrowIfNull``1(``0,System.Boolean,System.String)">
            <summary>Throws an <see cref="T:System.ArgumentNullException"/> if <paramref name="argument"/> is null.</summary>
            <param name="argument">The reference type argument to validate as non-null.</param>
            <param name="throwOnEmptyString">Only applicable to strings.</param>
            <param name="paramName">The name of the parameter with which <paramref name="argument"/> corresponds.</param>
        </member>
    </members>
</doc>
